// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package bucket

import (
	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.ACL, b.ko.Spec.ACL) {
		delta.Add("Spec.ACL", a.ko.Spec.ACL, b.ko.Spec.ACL)
	} else if a.ko.Spec.ACL != nil && b.ko.Spec.ACL != nil {
		if *a.ko.Spec.ACL != *b.ko.Spec.ACL {
			delta.Add("Spec.ACL", a.ko.Spec.ACL, b.ko.Spec.ACL)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AccelerateConfiguration, b.ko.Spec.AccelerateConfiguration) {
		delta.Add("Spec.AccelerateConfiguration", a.ko.Spec.AccelerateConfiguration, b.ko.Spec.AccelerateConfiguration)
	} else if a.ko.Spec.AccelerateConfiguration != nil && b.ko.Spec.AccelerateConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.AccelerateConfiguration.Status, b.ko.Spec.AccelerateConfiguration.Status) {
			delta.Add("Spec.AccelerateConfiguration.Status", a.ko.Spec.AccelerateConfiguration.Status, b.ko.Spec.AccelerateConfiguration.Status)
		} else if a.ko.Spec.AccelerateConfiguration.Status != nil && b.ko.Spec.AccelerateConfiguration.Status != nil {
			if *a.ko.Spec.AccelerateConfiguration.Status != *b.ko.Spec.AccelerateConfiguration.Status {
				delta.Add("Spec.AccelerateConfiguration.Status", a.ko.Spec.AccelerateConfiguration.Status, b.ko.Spec.AccelerateConfiguration.Status)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration, b.ko.Spec.AnalyticsConfiguration) {
		delta.Add("Spec.AnalyticsConfiguration", a.ko.Spec.AnalyticsConfiguration, b.ko.Spec.AnalyticsConfiguration)
	} else if a.ko.Spec.AnalyticsConfiguration != nil && b.ko.Spec.AnalyticsConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter, b.ko.Spec.AnalyticsConfiguration.Filter) {
			delta.Add("Spec.AnalyticsConfiguration.Filter", a.ko.Spec.AnalyticsConfiguration.Filter, b.ko.Spec.AnalyticsConfiguration.Filter)
		} else if a.ko.Spec.AnalyticsConfiguration.Filter != nil && b.ko.Spec.AnalyticsConfiguration.Filter != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.And, b.ko.Spec.AnalyticsConfiguration.Filter.And) {
				delta.Add("Spec.AnalyticsConfiguration.Filter.And", a.ko.Spec.AnalyticsConfiguration.Filter.And, b.ko.Spec.AnalyticsConfiguration.Filter.And)
			} else if a.ko.Spec.AnalyticsConfiguration.Filter.And != nil && b.ko.Spec.AnalyticsConfiguration.Filter.And != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix) {
					delta.Add("Spec.AnalyticsConfiguration.Filter.And.Prefix", a.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix)
				} else if a.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix != nil && b.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix != nil {
					if *a.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix != *b.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix {
						delta.Add("Spec.AnalyticsConfiguration.Filter.And.Prefix", a.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.And.Prefix)
					}
				}

			}
			if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.Prefix) {
				delta.Add("Spec.AnalyticsConfiguration.Filter.Prefix", a.ko.Spec.AnalyticsConfiguration.Filter.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.Prefix)
			} else if a.ko.Spec.AnalyticsConfiguration.Filter.Prefix != nil && b.ko.Spec.AnalyticsConfiguration.Filter.Prefix != nil {
				if *a.ko.Spec.AnalyticsConfiguration.Filter.Prefix != *b.ko.Spec.AnalyticsConfiguration.Filter.Prefix {
					delta.Add("Spec.AnalyticsConfiguration.Filter.Prefix", a.ko.Spec.AnalyticsConfiguration.Filter.Prefix, b.ko.Spec.AnalyticsConfiguration.Filter.Prefix)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.Tag, b.ko.Spec.AnalyticsConfiguration.Filter.Tag) {
				delta.Add("Spec.AnalyticsConfiguration.Filter.Tag", a.ko.Spec.AnalyticsConfiguration.Filter.Tag, b.ko.Spec.AnalyticsConfiguration.Filter.Tag)
			} else if a.ko.Spec.AnalyticsConfiguration.Filter.Tag != nil && b.ko.Spec.AnalyticsConfiguration.Filter.Tag != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key) {
					delta.Add("Spec.AnalyticsConfiguration.Filter.Tag.Key", a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key)
				} else if a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key != nil && b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key != nil {
					if *a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key != *b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key {
						delta.Add("Spec.AnalyticsConfiguration.Filter.Tag.Key", a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Key)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value) {
					delta.Add("Spec.AnalyticsConfiguration.Filter.Tag.Value", a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value)
				} else if a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value != nil && b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value != nil {
					if *a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value != *b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value {
						delta.Add("Spec.AnalyticsConfiguration.Filter.Tag.Value", a.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value, b.ko.Spec.AnalyticsConfiguration.Filter.Tag.Value)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.ID, b.ko.Spec.AnalyticsConfiguration.ID) {
			delta.Add("Spec.AnalyticsConfiguration.ID", a.ko.Spec.AnalyticsConfiguration.ID, b.ko.Spec.AnalyticsConfiguration.ID)
		} else if a.ko.Spec.AnalyticsConfiguration.ID != nil && b.ko.Spec.AnalyticsConfiguration.ID != nil {
			if *a.ko.Spec.AnalyticsConfiguration.ID != *b.ko.Spec.AnalyticsConfiguration.ID {
				delta.Add("Spec.AnalyticsConfiguration.ID", a.ko.Spec.AnalyticsConfiguration.ID, b.ko.Spec.AnalyticsConfiguration.ID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis) {
			delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis)
		} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport) {
				delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport)
			} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination) {
					delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination)
				} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination) {
						delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination)
					} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination != nil {
						if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket) {
							delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket)
						} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket != nil {
							if *a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket != *b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket {
								delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Bucket)
							}
						}
						if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID) {
							delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID)
						} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID != nil {
							if *a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID != *b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID {
								delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.BucketAccountID)
							}
						}
						if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format) {
							delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format)
						} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format != nil {
							if *a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format != *b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format {
								delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Format)
							}
						}
						if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix) {
							delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix)
						} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix != nil {
							if *a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix != *b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix {
								delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.Destination.S3BucketDestination.Prefix)
							}
						}
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion) {
					delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion)
				} else if a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion != nil && b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion != nil {
					if *a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion != *b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion {
						delta.Add("Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion", a.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion, b.ko.Spec.AnalyticsConfiguration.StorageClassAnalysis.DataExport.OutputSchemaVersion)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Cors, b.ko.Spec.Cors) {
		delta.Add("Spec.Cors", a.ko.Spec.Cors, b.ko.Spec.Cors)
	} else if a.ko.Spec.Cors != nil && b.ko.Spec.Cors != nil {

	}
	if ackcompare.HasNilDifference(a.ko.Spec.CreateBucketConfiguration, b.ko.Spec.CreateBucketConfiguration) {
		delta.Add("Spec.CreateBucketConfiguration", a.ko.Spec.CreateBucketConfiguration, b.ko.Spec.CreateBucketConfiguration)
	} else if a.ko.Spec.CreateBucketConfiguration != nil && b.ko.Spec.CreateBucketConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.CreateBucketConfiguration.LocationConstraint, b.ko.Spec.CreateBucketConfiguration.LocationConstraint) {
			delta.Add("Spec.CreateBucketConfiguration.LocationConstraint", a.ko.Spec.CreateBucketConfiguration.LocationConstraint, b.ko.Spec.CreateBucketConfiguration.LocationConstraint)
		} else if a.ko.Spec.CreateBucketConfiguration.LocationConstraint != nil && b.ko.Spec.CreateBucketConfiguration.LocationConstraint != nil {
			if *a.ko.Spec.CreateBucketConfiguration.LocationConstraint != *b.ko.Spec.CreateBucketConfiguration.LocationConstraint {
				delta.Add("Spec.CreateBucketConfiguration.LocationConstraint", a.ko.Spec.CreateBucketConfiguration.LocationConstraint, b.ko.Spec.CreateBucketConfiguration.LocationConstraint)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Encryption, b.ko.Spec.Encryption) {
		delta.Add("Spec.Encryption", a.ko.Spec.Encryption, b.ko.Spec.Encryption)
	} else if a.ko.Spec.Encryption != nil && b.ko.Spec.Encryption != nil {

	}
	if ackcompare.HasNilDifference(a.ko.Spec.GrantFullControl, b.ko.Spec.GrantFullControl) {
		delta.Add("Spec.GrantFullControl", a.ko.Spec.GrantFullControl, b.ko.Spec.GrantFullControl)
	} else if a.ko.Spec.GrantFullControl != nil && b.ko.Spec.GrantFullControl != nil {
		if *a.ko.Spec.GrantFullControl != *b.ko.Spec.GrantFullControl {
			delta.Add("Spec.GrantFullControl", a.ko.Spec.GrantFullControl, b.ko.Spec.GrantFullControl)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.GrantRead, b.ko.Spec.GrantRead) {
		delta.Add("Spec.GrantRead", a.ko.Spec.GrantRead, b.ko.Spec.GrantRead)
	} else if a.ko.Spec.GrantRead != nil && b.ko.Spec.GrantRead != nil {
		if *a.ko.Spec.GrantRead != *b.ko.Spec.GrantRead {
			delta.Add("Spec.GrantRead", a.ko.Spec.GrantRead, b.ko.Spec.GrantRead)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.GrantReadACP, b.ko.Spec.GrantReadACP) {
		delta.Add("Spec.GrantReadACP", a.ko.Spec.GrantReadACP, b.ko.Spec.GrantReadACP)
	} else if a.ko.Spec.GrantReadACP != nil && b.ko.Spec.GrantReadACP != nil {
		if *a.ko.Spec.GrantReadACP != *b.ko.Spec.GrantReadACP {
			delta.Add("Spec.GrantReadACP", a.ko.Spec.GrantReadACP, b.ko.Spec.GrantReadACP)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.GrantWrite, b.ko.Spec.GrantWrite) {
		delta.Add("Spec.GrantWrite", a.ko.Spec.GrantWrite, b.ko.Spec.GrantWrite)
	} else if a.ko.Spec.GrantWrite != nil && b.ko.Spec.GrantWrite != nil {
		if *a.ko.Spec.GrantWrite != *b.ko.Spec.GrantWrite {
			delta.Add("Spec.GrantWrite", a.ko.Spec.GrantWrite, b.ko.Spec.GrantWrite)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.GrantWriteACP, b.ko.Spec.GrantWriteACP) {
		delta.Add("Spec.GrantWriteACP", a.ko.Spec.GrantWriteACP, b.ko.Spec.GrantWriteACP)
	} else if a.ko.Spec.GrantWriteACP != nil && b.ko.Spec.GrantWriteACP != nil {
		if *a.ko.Spec.GrantWriteACP != *b.ko.Spec.GrantWriteACP {
			delta.Add("Spec.GrantWriteACP", a.ko.Spec.GrantWriteACP, b.ko.Spec.GrantWriteACP)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration, b.ko.Spec.IntelligentTieringConfiguration) {
		delta.Add("Spec.IntelligentTieringConfiguration", a.ko.Spec.IntelligentTieringConfiguration, b.ko.Spec.IntelligentTieringConfiguration)
	} else if a.ko.Spec.IntelligentTieringConfiguration != nil && b.ko.Spec.IntelligentTieringConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter, b.ko.Spec.IntelligentTieringConfiguration.Filter) {
			delta.Add("Spec.IntelligentTieringConfiguration.Filter", a.ko.Spec.IntelligentTieringConfiguration.Filter, b.ko.Spec.IntelligentTieringConfiguration.Filter)
		} else if a.ko.Spec.IntelligentTieringConfiguration.Filter != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.And, b.ko.Spec.IntelligentTieringConfiguration.Filter.And) {
				delta.Add("Spec.IntelligentTieringConfiguration.Filter.And", a.ko.Spec.IntelligentTieringConfiguration.Filter.And, b.ko.Spec.IntelligentTieringConfiguration.Filter.And)
			} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.And != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.And != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix) {
					delta.Add("Spec.IntelligentTieringConfiguration.Filter.And.Prefix", a.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix)
				} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix != nil {
					if *a.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix != *b.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix {
						delta.Add("Spec.IntelligentTieringConfiguration.Filter.And.Prefix", a.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.And.Prefix)
					}
				}

			}
			if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix) {
				delta.Add("Spec.IntelligentTieringConfiguration.Filter.Prefix", a.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix)
			} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix != nil {
				if *a.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix != *b.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix {
					delta.Add("Spec.IntelligentTieringConfiguration.Filter.Prefix", a.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix, b.ko.Spec.IntelligentTieringConfiguration.Filter.Prefix)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag) {
				delta.Add("Spec.IntelligentTieringConfiguration.Filter.Tag", a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag)
			} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key) {
					delta.Add("Spec.IntelligentTieringConfiguration.Filter.Tag.Key", a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key)
				} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key != nil {
					if *a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key != *b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key {
						delta.Add("Spec.IntelligentTieringConfiguration.Filter.Tag.Key", a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Key)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value) {
					delta.Add("Spec.IntelligentTieringConfiguration.Filter.Tag.Value", a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value)
				} else if a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value != nil && b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value != nil {
					if *a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value != *b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value {
						delta.Add("Spec.IntelligentTieringConfiguration.Filter.Tag.Value", a.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value, b.ko.Spec.IntelligentTieringConfiguration.Filter.Tag.Value)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.ID, b.ko.Spec.IntelligentTieringConfiguration.ID) {
			delta.Add("Spec.IntelligentTieringConfiguration.ID", a.ko.Spec.IntelligentTieringConfiguration.ID, b.ko.Spec.IntelligentTieringConfiguration.ID)
		} else if a.ko.Spec.IntelligentTieringConfiguration.ID != nil && b.ko.Spec.IntelligentTieringConfiguration.ID != nil {
			if *a.ko.Spec.IntelligentTieringConfiguration.ID != *b.ko.Spec.IntelligentTieringConfiguration.ID {
				delta.Add("Spec.IntelligentTieringConfiguration.ID", a.ko.Spec.IntelligentTieringConfiguration.ID, b.ko.Spec.IntelligentTieringConfiguration.ID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.IntelligentTieringConfiguration.Status, b.ko.Spec.IntelligentTieringConfiguration.Status) {
			delta.Add("Spec.IntelligentTieringConfiguration.Status", a.ko.Spec.IntelligentTieringConfiguration.Status, b.ko.Spec.IntelligentTieringConfiguration.Status)
		} else if a.ko.Spec.IntelligentTieringConfiguration.Status != nil && b.ko.Spec.IntelligentTieringConfiguration.Status != nil {
			if *a.ko.Spec.IntelligentTieringConfiguration.Status != *b.ko.Spec.IntelligentTieringConfiguration.Status {
				delta.Add("Spec.IntelligentTieringConfiguration.Status", a.ko.Spec.IntelligentTieringConfiguration.Status, b.ko.Spec.IntelligentTieringConfiguration.Status)
			}
		}

	}
	if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration, b.ko.Spec.InventoryConfiguration) {
		delta.Add("Spec.InventoryConfiguration", a.ko.Spec.InventoryConfiguration, b.ko.Spec.InventoryConfiguration)
	} else if a.ko.Spec.InventoryConfiguration != nil && b.ko.Spec.InventoryConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination, b.ko.Spec.InventoryConfiguration.Destination) {
			delta.Add("Spec.InventoryConfiguration.Destination", a.ko.Spec.InventoryConfiguration.Destination, b.ko.Spec.InventoryConfiguration.Destination)
		} else if a.ko.Spec.InventoryConfiguration.Destination != nil && b.ko.Spec.InventoryConfiguration.Destination != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination) {
				delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination)
			} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID) {
					delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID)
				} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID != nil {
					if *a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID != *b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID {
						delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.AccountID)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket) {
					delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket)
				} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket != nil {
					if *a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket != *b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket {
						delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Bucket)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption) {
					delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption)
				} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS) {
						delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS)
					} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS != nil {
						if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID) {
							delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID)
						} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID != nil {
							if *a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID != *b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID {
								delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Encryption.SSEKMS.KeyID)
							}
						}
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format) {
					delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Format", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format)
				} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format != nil {
					if *a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format != *b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format {
						delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Format", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Format)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix) {
					delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix)
				} else if a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix != nil && b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix != nil {
					if *a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix != *b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix {
						delta.Add("Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix", a.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix, b.ko.Spec.InventoryConfiguration.Destination.S3BucketDestination.Prefix)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Filter, b.ko.Spec.InventoryConfiguration.Filter) {
			delta.Add("Spec.InventoryConfiguration.Filter", a.ko.Spec.InventoryConfiguration.Filter, b.ko.Spec.InventoryConfiguration.Filter)
		} else if a.ko.Spec.InventoryConfiguration.Filter != nil && b.ko.Spec.InventoryConfiguration.Filter != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Filter.Prefix, b.ko.Spec.InventoryConfiguration.Filter.Prefix) {
				delta.Add("Spec.InventoryConfiguration.Filter.Prefix", a.ko.Spec.InventoryConfiguration.Filter.Prefix, b.ko.Spec.InventoryConfiguration.Filter.Prefix)
			} else if a.ko.Spec.InventoryConfiguration.Filter.Prefix != nil && b.ko.Spec.InventoryConfiguration.Filter.Prefix != nil {
				if *a.ko.Spec.InventoryConfiguration.Filter.Prefix != *b.ko.Spec.InventoryConfiguration.Filter.Prefix {
					delta.Add("Spec.InventoryConfiguration.Filter.Prefix", a.ko.Spec.InventoryConfiguration.Filter.Prefix, b.ko.Spec.InventoryConfiguration.Filter.Prefix)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.ID, b.ko.Spec.InventoryConfiguration.ID) {
			delta.Add("Spec.InventoryConfiguration.ID", a.ko.Spec.InventoryConfiguration.ID, b.ko.Spec.InventoryConfiguration.ID)
		} else if a.ko.Spec.InventoryConfiguration.ID != nil && b.ko.Spec.InventoryConfiguration.ID != nil {
			if *a.ko.Spec.InventoryConfiguration.ID != *b.ko.Spec.InventoryConfiguration.ID {
				delta.Add("Spec.InventoryConfiguration.ID", a.ko.Spec.InventoryConfiguration.ID, b.ko.Spec.InventoryConfiguration.ID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.IncludedObjectVersions, b.ko.Spec.InventoryConfiguration.IncludedObjectVersions) {
			delta.Add("Spec.InventoryConfiguration.IncludedObjectVersions", a.ko.Spec.InventoryConfiguration.IncludedObjectVersions, b.ko.Spec.InventoryConfiguration.IncludedObjectVersions)
		} else if a.ko.Spec.InventoryConfiguration.IncludedObjectVersions != nil && b.ko.Spec.InventoryConfiguration.IncludedObjectVersions != nil {
			if *a.ko.Spec.InventoryConfiguration.IncludedObjectVersions != *b.ko.Spec.InventoryConfiguration.IncludedObjectVersions {
				delta.Add("Spec.InventoryConfiguration.IncludedObjectVersions", a.ko.Spec.InventoryConfiguration.IncludedObjectVersions, b.ko.Spec.InventoryConfiguration.IncludedObjectVersions)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.IsEnabled, b.ko.Spec.InventoryConfiguration.IsEnabled) {
			delta.Add("Spec.InventoryConfiguration.IsEnabled", a.ko.Spec.InventoryConfiguration.IsEnabled, b.ko.Spec.InventoryConfiguration.IsEnabled)
		} else if a.ko.Spec.InventoryConfiguration.IsEnabled != nil && b.ko.Spec.InventoryConfiguration.IsEnabled != nil {
			if *a.ko.Spec.InventoryConfiguration.IsEnabled != *b.ko.Spec.InventoryConfiguration.IsEnabled {
				delta.Add("Spec.InventoryConfiguration.IsEnabled", a.ko.Spec.InventoryConfiguration.IsEnabled, b.ko.Spec.InventoryConfiguration.IsEnabled)
			}
		}

		if !ackcompare.SliceStringPEqual(a.ko.Spec.InventoryConfiguration.OptionalFields, b.ko.Spec.InventoryConfiguration.OptionalFields) {
			delta.Add("Spec.InventoryConfiguration.OptionalFields", a.ko.Spec.InventoryConfiguration.OptionalFields, b.ko.Spec.InventoryConfiguration.OptionalFields)
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Schedule, b.ko.Spec.InventoryConfiguration.Schedule) {
			delta.Add("Spec.InventoryConfiguration.Schedule", a.ko.Spec.InventoryConfiguration.Schedule, b.ko.Spec.InventoryConfiguration.Schedule)
		} else if a.ko.Spec.InventoryConfiguration.Schedule != nil && b.ko.Spec.InventoryConfiguration.Schedule != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.InventoryConfiguration.Schedule.Frequency, b.ko.Spec.InventoryConfiguration.Schedule.Frequency) {
				delta.Add("Spec.InventoryConfiguration.Schedule.Frequency", a.ko.Spec.InventoryConfiguration.Schedule.Frequency, b.ko.Spec.InventoryConfiguration.Schedule.Frequency)
			} else if a.ko.Spec.InventoryConfiguration.Schedule.Frequency != nil && b.ko.Spec.InventoryConfiguration.Schedule.Frequency != nil {
				if *a.ko.Spec.InventoryConfiguration.Schedule.Frequency != *b.ko.Spec.InventoryConfiguration.Schedule.Frequency {
					delta.Add("Spec.InventoryConfiguration.Schedule.Frequency", a.ko.Spec.InventoryConfiguration.Schedule.Frequency, b.ko.Spec.InventoryConfiguration.Schedule.Frequency)
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LifecycleConfiguration, b.ko.Spec.LifecycleConfiguration) {
		delta.Add("Spec.LifecycleConfiguration", a.ko.Spec.LifecycleConfiguration, b.ko.Spec.LifecycleConfiguration)
	} else if a.ko.Spec.LifecycleConfiguration != nil && b.ko.Spec.LifecycleConfiguration != nil {

	}
	if ackcompare.HasNilDifference(a.ko.Spec.Logging, b.ko.Spec.Logging) {
		delta.Add("Spec.Logging", a.ko.Spec.Logging, b.ko.Spec.Logging)
	} else if a.ko.Spec.Logging != nil && b.ko.Spec.Logging != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.Logging.LoggingEnabled, b.ko.Spec.Logging.LoggingEnabled) {
			delta.Add("Spec.Logging.LoggingEnabled", a.ko.Spec.Logging.LoggingEnabled, b.ko.Spec.Logging.LoggingEnabled)
		} else if a.ko.Spec.Logging.LoggingEnabled != nil && b.ko.Spec.Logging.LoggingEnabled != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.Logging.LoggingEnabled.TargetBucket, b.ko.Spec.Logging.LoggingEnabled.TargetBucket) {
				delta.Add("Spec.Logging.LoggingEnabled.TargetBucket", a.ko.Spec.Logging.LoggingEnabled.TargetBucket, b.ko.Spec.Logging.LoggingEnabled.TargetBucket)
			} else if a.ko.Spec.Logging.LoggingEnabled.TargetBucket != nil && b.ko.Spec.Logging.LoggingEnabled.TargetBucket != nil {
				if *a.ko.Spec.Logging.LoggingEnabled.TargetBucket != *b.ko.Spec.Logging.LoggingEnabled.TargetBucket {
					delta.Add("Spec.Logging.LoggingEnabled.TargetBucket", a.ko.Spec.Logging.LoggingEnabled.TargetBucket, b.ko.Spec.Logging.LoggingEnabled.TargetBucket)
				}
			}

			if ackcompare.HasNilDifference(a.ko.Spec.Logging.LoggingEnabled.TargetPrefix, b.ko.Spec.Logging.LoggingEnabled.TargetPrefix) {
				delta.Add("Spec.Logging.LoggingEnabled.TargetPrefix", a.ko.Spec.Logging.LoggingEnabled.TargetPrefix, b.ko.Spec.Logging.LoggingEnabled.TargetPrefix)
			} else if a.ko.Spec.Logging.LoggingEnabled.TargetPrefix != nil && b.ko.Spec.Logging.LoggingEnabled.TargetPrefix != nil {
				if *a.ko.Spec.Logging.LoggingEnabled.TargetPrefix != *b.ko.Spec.Logging.LoggingEnabled.TargetPrefix {
					delta.Add("Spec.Logging.LoggingEnabled.TargetPrefix", a.ko.Spec.Logging.LoggingEnabled.TargetPrefix, b.ko.Spec.Logging.LoggingEnabled.TargetPrefix)
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration, b.ko.Spec.MetricsConfiguration) {
		delta.Add("Spec.MetricsConfiguration", a.ko.Spec.MetricsConfiguration, b.ko.Spec.MetricsConfiguration)
	} else if a.ko.Spec.MetricsConfiguration != nil && b.ko.Spec.MetricsConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter, b.ko.Spec.MetricsConfiguration.Filter) {
			delta.Add("Spec.MetricsConfiguration.Filter", a.ko.Spec.MetricsConfiguration.Filter, b.ko.Spec.MetricsConfiguration.Filter)
		} else if a.ko.Spec.MetricsConfiguration.Filter != nil && b.ko.Spec.MetricsConfiguration.Filter != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.And, b.ko.Spec.MetricsConfiguration.Filter.And) {
				delta.Add("Spec.MetricsConfiguration.Filter.And", a.ko.Spec.MetricsConfiguration.Filter.And, b.ko.Spec.MetricsConfiguration.Filter.And)
			} else if a.ko.Spec.MetricsConfiguration.Filter.And != nil && b.ko.Spec.MetricsConfiguration.Filter.And != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.And.Prefix, b.ko.Spec.MetricsConfiguration.Filter.And.Prefix) {
					delta.Add("Spec.MetricsConfiguration.Filter.And.Prefix", a.ko.Spec.MetricsConfiguration.Filter.And.Prefix, b.ko.Spec.MetricsConfiguration.Filter.And.Prefix)
				} else if a.ko.Spec.MetricsConfiguration.Filter.And.Prefix != nil && b.ko.Spec.MetricsConfiguration.Filter.And.Prefix != nil {
					if *a.ko.Spec.MetricsConfiguration.Filter.And.Prefix != *b.ko.Spec.MetricsConfiguration.Filter.And.Prefix {
						delta.Add("Spec.MetricsConfiguration.Filter.And.Prefix", a.ko.Spec.MetricsConfiguration.Filter.And.Prefix, b.ko.Spec.MetricsConfiguration.Filter.And.Prefix)
					}
				}

			}
			if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.Prefix, b.ko.Spec.MetricsConfiguration.Filter.Prefix) {
				delta.Add("Spec.MetricsConfiguration.Filter.Prefix", a.ko.Spec.MetricsConfiguration.Filter.Prefix, b.ko.Spec.MetricsConfiguration.Filter.Prefix)
			} else if a.ko.Spec.MetricsConfiguration.Filter.Prefix != nil && b.ko.Spec.MetricsConfiguration.Filter.Prefix != nil {
				if *a.ko.Spec.MetricsConfiguration.Filter.Prefix != *b.ko.Spec.MetricsConfiguration.Filter.Prefix {
					delta.Add("Spec.MetricsConfiguration.Filter.Prefix", a.ko.Spec.MetricsConfiguration.Filter.Prefix, b.ko.Spec.MetricsConfiguration.Filter.Prefix)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.Tag, b.ko.Spec.MetricsConfiguration.Filter.Tag) {
				delta.Add("Spec.MetricsConfiguration.Filter.Tag", a.ko.Spec.MetricsConfiguration.Filter.Tag, b.ko.Spec.MetricsConfiguration.Filter.Tag)
			} else if a.ko.Spec.MetricsConfiguration.Filter.Tag != nil && b.ko.Spec.MetricsConfiguration.Filter.Tag != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.Tag.Key, b.ko.Spec.MetricsConfiguration.Filter.Tag.Key) {
					delta.Add("Spec.MetricsConfiguration.Filter.Tag.Key", a.ko.Spec.MetricsConfiguration.Filter.Tag.Key, b.ko.Spec.MetricsConfiguration.Filter.Tag.Key)
				} else if a.ko.Spec.MetricsConfiguration.Filter.Tag.Key != nil && b.ko.Spec.MetricsConfiguration.Filter.Tag.Key != nil {
					if *a.ko.Spec.MetricsConfiguration.Filter.Tag.Key != *b.ko.Spec.MetricsConfiguration.Filter.Tag.Key {
						delta.Add("Spec.MetricsConfiguration.Filter.Tag.Key", a.ko.Spec.MetricsConfiguration.Filter.Tag.Key, b.ko.Spec.MetricsConfiguration.Filter.Tag.Key)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.Filter.Tag.Value, b.ko.Spec.MetricsConfiguration.Filter.Tag.Value) {
					delta.Add("Spec.MetricsConfiguration.Filter.Tag.Value", a.ko.Spec.MetricsConfiguration.Filter.Tag.Value, b.ko.Spec.MetricsConfiguration.Filter.Tag.Value)
				} else if a.ko.Spec.MetricsConfiguration.Filter.Tag.Value != nil && b.ko.Spec.MetricsConfiguration.Filter.Tag.Value != nil {
					if *a.ko.Spec.MetricsConfiguration.Filter.Tag.Value != *b.ko.Spec.MetricsConfiguration.Filter.Tag.Value {
						delta.Add("Spec.MetricsConfiguration.Filter.Tag.Value", a.ko.Spec.MetricsConfiguration.Filter.Tag.Value, b.ko.Spec.MetricsConfiguration.Filter.Tag.Value)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.MetricsConfiguration.ID, b.ko.Spec.MetricsConfiguration.ID) {
			delta.Add("Spec.MetricsConfiguration.ID", a.ko.Spec.MetricsConfiguration.ID, b.ko.Spec.MetricsConfiguration.ID)
		} else if a.ko.Spec.MetricsConfiguration.ID != nil && b.ko.Spec.MetricsConfiguration.ID != nil {
			if *a.ko.Spec.MetricsConfiguration.ID != *b.ko.Spec.MetricsConfiguration.ID {
				delta.Add("Spec.MetricsConfiguration.ID", a.ko.Spec.MetricsConfiguration.ID, b.ko.Spec.MetricsConfiguration.ID)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Name, b.ko.Spec.Name) {
		delta.Add("Spec.Name", a.ko.Spec.Name, b.ko.Spec.Name)
	} else if a.ko.Spec.Name != nil && b.ko.Spec.Name != nil {
		if *a.ko.Spec.Name != *b.ko.Spec.Name {
			delta.Add("Spec.Name", a.ko.Spec.Name, b.ko.Spec.Name)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ObjectLockEnabledForBucket, b.ko.Spec.ObjectLockEnabledForBucket) {
		delta.Add("Spec.ObjectLockEnabledForBucket", a.ko.Spec.ObjectLockEnabledForBucket, b.ko.Spec.ObjectLockEnabledForBucket)
	} else if a.ko.Spec.ObjectLockEnabledForBucket != nil && b.ko.Spec.ObjectLockEnabledForBucket != nil {
		if *a.ko.Spec.ObjectLockEnabledForBucket != *b.ko.Spec.ObjectLockEnabledForBucket {
			delta.Add("Spec.ObjectLockEnabledForBucket", a.ko.Spec.ObjectLockEnabledForBucket, b.ko.Spec.ObjectLockEnabledForBucket)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.OwnershipControls, b.ko.Spec.OwnershipControls) {
		delta.Add("Spec.OwnershipControls", a.ko.Spec.OwnershipControls, b.ko.Spec.OwnershipControls)
	} else if a.ko.Spec.OwnershipControls != nil && b.ko.Spec.OwnershipControls != nil {

	}
	if ackcompare.HasNilDifference(a.ko.Spec.Policy, b.ko.Spec.Policy) {
		delta.Add("Spec.Policy", a.ko.Spec.Policy, b.ko.Spec.Policy)
	} else if a.ko.Spec.Policy != nil && b.ko.Spec.Policy != nil {
		if *a.ko.Spec.Policy != *b.ko.Spec.Policy {
			delta.Add("Spec.Policy", a.ko.Spec.Policy, b.ko.Spec.Policy)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Replication, b.ko.Spec.Replication) {
		delta.Add("Spec.Replication", a.ko.Spec.Replication, b.ko.Spec.Replication)
	} else if a.ko.Spec.Replication != nil && b.ko.Spec.Replication != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.Replication.Role, b.ko.Spec.Replication.Role) {
			delta.Add("Spec.Replication.Role", a.ko.Spec.Replication.Role, b.ko.Spec.Replication.Role)
		} else if a.ko.Spec.Replication.Role != nil && b.ko.Spec.Replication.Role != nil {
			if *a.ko.Spec.Replication.Role != *b.ko.Spec.Replication.Role {
				delta.Add("Spec.Replication.Role", a.ko.Spec.Replication.Role, b.ko.Spec.Replication.Role)
			}
		}

	}
	if ackcompare.HasNilDifference(a.ko.Spec.RequestPayment, b.ko.Spec.RequestPayment) {
		delta.Add("Spec.RequestPayment", a.ko.Spec.RequestPayment, b.ko.Spec.RequestPayment)
	} else if a.ko.Spec.RequestPayment != nil && b.ko.Spec.RequestPayment != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.RequestPayment.Payer, b.ko.Spec.RequestPayment.Payer) {
			delta.Add("Spec.RequestPayment.Payer", a.ko.Spec.RequestPayment.Payer, b.ko.Spec.RequestPayment.Payer)
		} else if a.ko.Spec.RequestPayment.Payer != nil && b.ko.Spec.RequestPayment.Payer != nil {
			if *a.ko.Spec.RequestPayment.Payer != *b.ko.Spec.RequestPayment.Payer {
				delta.Add("Spec.RequestPayment.Payer", a.ko.Spec.RequestPayment.Payer, b.ko.Spec.RequestPayment.Payer)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Tagging, b.ko.Spec.Tagging) {
		delta.Add("Spec.Tagging", a.ko.Spec.Tagging, b.ko.Spec.Tagging)
	} else if a.ko.Spec.Tagging != nil && b.ko.Spec.Tagging != nil {

	}
	if ackcompare.HasNilDifference(a.ko.Spec.Versioning, b.ko.Spec.Versioning) {
		delta.Add("Spec.Versioning", a.ko.Spec.Versioning, b.ko.Spec.Versioning)
	} else if a.ko.Spec.Versioning != nil && b.ko.Spec.Versioning != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.Versioning.MFADelete, b.ko.Spec.Versioning.MFADelete) {
			delta.Add("Spec.Versioning.MFADelete", a.ko.Spec.Versioning.MFADelete, b.ko.Spec.Versioning.MFADelete)
		} else if a.ko.Spec.Versioning.MFADelete != nil && b.ko.Spec.Versioning.MFADelete != nil {
			if *a.ko.Spec.Versioning.MFADelete != *b.ko.Spec.Versioning.MFADelete {
				delta.Add("Spec.Versioning.MFADelete", a.ko.Spec.Versioning.MFADelete, b.ko.Spec.Versioning.MFADelete)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.Versioning.Status, b.ko.Spec.Versioning.Status) {
			delta.Add("Spec.Versioning.Status", a.ko.Spec.Versioning.Status, b.ko.Spec.Versioning.Status)
		} else if a.ko.Spec.Versioning.Status != nil && b.ko.Spec.Versioning.Status != nil {
			if *a.ko.Spec.Versioning.Status != *b.ko.Spec.Versioning.Status {
				delta.Add("Spec.Versioning.Status", a.ko.Spec.Versioning.Status, b.ko.Spec.Versioning.Status)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Website, b.ko.Spec.Website) {
		delta.Add("Spec.Website", a.ko.Spec.Website, b.ko.Spec.Website)
	} else if a.ko.Spec.Website != nil && b.ko.Spec.Website != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.Website.ErrorDocument, b.ko.Spec.Website.ErrorDocument) {
			delta.Add("Spec.Website.ErrorDocument", a.ko.Spec.Website.ErrorDocument, b.ko.Spec.Website.ErrorDocument)
		} else if a.ko.Spec.Website.ErrorDocument != nil && b.ko.Spec.Website.ErrorDocument != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.Website.ErrorDocument.Key, b.ko.Spec.Website.ErrorDocument.Key) {
				delta.Add("Spec.Website.ErrorDocument.Key", a.ko.Spec.Website.ErrorDocument.Key, b.ko.Spec.Website.ErrorDocument.Key)
			} else if a.ko.Spec.Website.ErrorDocument.Key != nil && b.ko.Spec.Website.ErrorDocument.Key != nil {
				if *a.ko.Spec.Website.ErrorDocument.Key != *b.ko.Spec.Website.ErrorDocument.Key {
					delta.Add("Spec.Website.ErrorDocument.Key", a.ko.Spec.Website.ErrorDocument.Key, b.ko.Spec.Website.ErrorDocument.Key)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.Website.IndexDocument, b.ko.Spec.Website.IndexDocument) {
			delta.Add("Spec.Website.IndexDocument", a.ko.Spec.Website.IndexDocument, b.ko.Spec.Website.IndexDocument)
		} else if a.ko.Spec.Website.IndexDocument != nil && b.ko.Spec.Website.IndexDocument != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.Website.IndexDocument.Suffix, b.ko.Spec.Website.IndexDocument.Suffix) {
				delta.Add("Spec.Website.IndexDocument.Suffix", a.ko.Spec.Website.IndexDocument.Suffix, b.ko.Spec.Website.IndexDocument.Suffix)
			} else if a.ko.Spec.Website.IndexDocument.Suffix != nil && b.ko.Spec.Website.IndexDocument.Suffix != nil {
				if *a.ko.Spec.Website.IndexDocument.Suffix != *b.ko.Spec.Website.IndexDocument.Suffix {
					delta.Add("Spec.Website.IndexDocument.Suffix", a.ko.Spec.Website.IndexDocument.Suffix, b.ko.Spec.Website.IndexDocument.Suffix)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.Website.RedirectAllRequestsTo, b.ko.Spec.Website.RedirectAllRequestsTo) {
			delta.Add("Spec.Website.RedirectAllRequestsTo", a.ko.Spec.Website.RedirectAllRequestsTo, b.ko.Spec.Website.RedirectAllRequestsTo)
		} else if a.ko.Spec.Website.RedirectAllRequestsTo != nil && b.ko.Spec.Website.RedirectAllRequestsTo != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.Website.RedirectAllRequestsTo.HostName, b.ko.Spec.Website.RedirectAllRequestsTo.HostName) {
				delta.Add("Spec.Website.RedirectAllRequestsTo.HostName", a.ko.Spec.Website.RedirectAllRequestsTo.HostName, b.ko.Spec.Website.RedirectAllRequestsTo.HostName)
			} else if a.ko.Spec.Website.RedirectAllRequestsTo.HostName != nil && b.ko.Spec.Website.RedirectAllRequestsTo.HostName != nil {
				if *a.ko.Spec.Website.RedirectAllRequestsTo.HostName != *b.ko.Spec.Website.RedirectAllRequestsTo.HostName {
					delta.Add("Spec.Website.RedirectAllRequestsTo.HostName", a.ko.Spec.Website.RedirectAllRequestsTo.HostName, b.ko.Spec.Website.RedirectAllRequestsTo.HostName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.Website.RedirectAllRequestsTo.Protocol, b.ko.Spec.Website.RedirectAllRequestsTo.Protocol) {
				delta.Add("Spec.Website.RedirectAllRequestsTo.Protocol", a.ko.Spec.Website.RedirectAllRequestsTo.Protocol, b.ko.Spec.Website.RedirectAllRequestsTo.Protocol)
			} else if a.ko.Spec.Website.RedirectAllRequestsTo.Protocol != nil && b.ko.Spec.Website.RedirectAllRequestsTo.Protocol != nil {
				if *a.ko.Spec.Website.RedirectAllRequestsTo.Protocol != *b.ko.Spec.Website.RedirectAllRequestsTo.Protocol {
					delta.Add("Spec.Website.RedirectAllRequestsTo.Protocol", a.ko.Spec.Website.RedirectAllRequestsTo.Protocol, b.ko.Spec.Website.RedirectAllRequestsTo.Protocol)
				}
			}
		}

	}

	return delta
}
