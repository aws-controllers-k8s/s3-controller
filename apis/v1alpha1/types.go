// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)

// Contains the elements that set the ACL permissions for an object per grantee.
type AccessControlPolicy struct {
	// Container for the owner's display name and ID.
	Owner *Owner `json:"owner,omitempty"`
}

// Contains information about where to publish the analytics results.
type AnalyticsS3BucketDestination struct {
	Bucket          *string `json:"bucket,omitempty"`
	BucketAccountID *string `json:"bucketAccountID,omitempty"`
}

// Container for logging status information.
type BucketLoggingStatus struct {
	// Describes where logs are stored and the prefix that Amazon S3 assigns to
	// all log object keys for a bucket. For more information, see PUT Bucket logging
	// (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html)
	// in the Amazon Simple Storage Service API Reference.
	LoggingEnabled *LoggingEnabled `json:"loggingEnabled,omitempty"`
}

// In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name
// is globally unique, and the namespace is shared by all AWS accounts.
type Bucket_SDK struct {
	CreationDate *metav1.Time `json:"creationDate,omitempty"`
	Name         *string      `json:"name,omitempty"`
}

// The configuration information for the bucket.
type CreateBucketConfiguration struct {
	LocationConstraint *string `json:"locationConstraint,omitempty"`
}

// Information about the delete marker.
type DeleteMarkerEntry struct {
	// Container for the owner's display name and ID.
	Owner *Owner `json:"owner,omitempty"`
}

// Specifies information about where to publish analysis or configuration results
// for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
type Destination struct {
	Account *string `json:"account,omitempty"`
	Bucket  *string `json:"bucket,omitempty"`
}

// Container for grant information.
type Grant struct {
	// Container for the person being granted permissions.
	Grantee *Grantee `json:"grantee,omitempty"`
}

// Container for the person being granted permissions.
type Grantee struct {
	DisplayName  *string `json:"displayName,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	ID           *string `json:"id,omitempty"`
	Type         *string `json:"type_,omitempty"`
	URI          *string `json:"uRI,omitempty"`
}

// Container element that identifies who initiated the multipart upload.
type Initiator struct {
	DisplayName *string `json:"displayName,omitempty"`
	ID          *string `json:"id,omitempty"`
}

// Contains the bucket name, file format, bucket owner (optional), and prefix
// (optional) where inventory results are published.
type InventoryS3BucketDestination struct {
	AccountID *string `json:"accountID,omitempty"`
	Bucket    *string `json:"bucket,omitempty"`
}

// A lifecycle rule for individual objects in an Amazon S3 bucket.
type LifecycleRule struct {
	ID *string `json:"id,omitempty"`
}

// Describes an Amazon S3 location that will receive the results of the restore
// request.
type Location struct {
	BucketName *string `json:"bucketName,omitempty"`
}

// Describes where logs are stored and the prefix that Amazon S3 assigns to
// all log object keys for a bucket. For more information, see PUT Bucket logging
// (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html)
// in the Amazon Simple Storage Service API Reference.
type LoggingEnabled struct {
	TargetBucket *string        `json:"targetBucket,omitempty"`
	TargetGrants []*TargetGrant `json:"targetGrants,omitempty"`
	TargetPrefix *string        `json:"targetPrefix,omitempty"`
}

// Container for the MultipartUpload for the Amazon S3 object.
type MultipartUpload struct {
	// Container for the owner's display name and ID.
	Owner *Owner `json:"owner,omitempty"`
}

// An object consists of data and its descriptive metadata.
type Object struct {
	// Container for the owner's display name and ID.
	Owner *Owner `json:"owner,omitempty"`
}

// The version of an object.
type ObjectVersion struct {
	// Container for the owner's display name and ID.
	Owner *Owner `json:"owner,omitempty"`
}

// Describes the location where the restore job's output is stored.
type OutputLocation struct {
	// Describes an Amazon S3 location that will receive the results of the restore
	// request.
	S3 *Location `json:"s3,omitempty"`
}

// Container for the owner's display name and ID.
type Owner struct {
	DisplayName *string `json:"displayName,omitempty"`
	ID          *string `json:"id,omitempty"`
}

// Specifies which Amazon S3 objects to replicate and where to store the replicas.
type ReplicationRule struct {
	ID *string `json:"id,omitempty"`
}

// Specifies lifecycle rules for an Amazon S3 bucket. For more information,
// see Put Bucket Lifecycle Configuration (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html)
// in the Amazon Simple Storage Service API Reference. For examples, see Put
// Bucket Lifecycle Configuration Examples (https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html#API_PutBucketLifecycleConfiguration_Examples)
type Rule struct {
	ID *string `json:"id,omitempty"`
}

// Container for granting information.
type TargetGrant struct {
	// Container for the person being granted permissions.
	Grantee    *Grantee `json:"grantee,omitempty"`
	Permission *string  `json:"permission,omitempty"`
}
